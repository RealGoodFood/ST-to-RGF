- content_for :javascript do
  initialize_signup_form("#{I18n.locale}","#{t("people.new.username_is_in_use")}","#{t("people.new.username_is_invalid")}","#{t("communities.signup_form.email_in_use_message", :log_in_link => link_to(t("communities.signup_form.log_in_here").html_safe, dashboard_login_path))}", "#{t("communities.signup_form.invalid_email_ending_message", :community_category => t("communities.select_tribe_category_form.#{session[:community_category]}"))}", "#{community_email_restricted?}", "#{session[:community_category]}");

.grid_12.alpha.omega
  %h1.new_tribe= t(".create_an_account")
  %h2.new_tribe
    = t(".to_create_a_tribe_you_must_first_create_sharetribe_account")
    = link_to(t(".log_in_with_your_existing_account"), dashboard_login_path, :class => "green_part_link") + "."
.grid_6.prefix_3.suffix_3.alpha.omega
  #signup_form
    = form_for @person, :url => APP_CONFIG.login_domain.to_s + people_path do |form|
      .form_field_container
        = form.label :email, new_community_email_label
        = form.text_field :email, :class => :text_field, :maxlenght => "255"
        - # Honey pot: hidden field to detect spammers
        = form.label :email_confirmation, "You should not see this field, if CSS is working. If you see this, please send feedback on left!", :class => "unwanted_text_field" 
        = form.text_field :email_confirmation, :class => "unwanted_text_field", :id => "error_regristration_unwanted_email2"
        - if ["university", "company"].include? session[:community_category]
          %p.form
            = t(".you_need_to_confirm", :tribe_type => t("communities.select_tribe_category_form.#{session[:community_category]}").downcase)
      .form_field_container 
        = form.label :username, t('.pick_username')
        = form.text_field :username, :class => :text_field, :maxlength => "20"
      .form_field_container
        = form.label :given_name, t('.your_given_name'), :class => "before_description"
        = form.text_field :given_name, :class => :text_field, :maxlength => "30"
      .form_field_container
        = form.label :family_name, t('.your_family_name'), :class => "before_description"
        = form.text_field :family_name, :class => :text_field, :maxlength => "30"
      .form_field_container  
        = form.label :password, t('.your_password')
        = form.password_field :password, :class => :text_field, :maxlength => "255"
      .form_field_container  
        = form.label :password2, t('.confirm_your_password')
        = form.password_field :password2, :class => :text_field, :maxlength => "255"
      .form_field_container
        .signup_checkbox_container
          .signup_checkbox_input_container
            %input{:type => "checkbox", :id => "person_terms", :style => "opacity: 0;", :name => "person[terms]"}
          .signup_checkbox_label_container
            = form.label :terms, t('people.new.i_accept_the'), :class => "checkbox"
            = link_to t("people.new.terms"), "#", :tabindex => "-1", :id => "terms_link", :class => "green_part_link"
      .form_field_container
        = form.hidden_field :community_category, :value => session[:community_category]
        = submit_tag(t('people.new.create_new_account'), :class => "send_button")
        
= render :partial => "people/help_texts", :collection => ["terms"], :as => :field 